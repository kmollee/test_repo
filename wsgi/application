# coding: utf-8
import cherrypy
import math
class c2w17(object):
    """docstring for c2w17
    1.繪製二力 給予 角度 以及力 試著 算出合力
    2.繪製一力 給予角度 試算出 X軸 Y軸向的分力
    3.給定XY點 判斷 此點坐落在 何一象限
    """
    # 表單有中文要加上這個
    _cp_config = {
        # 配合 utf-8 格式之表單內容
        # 若沒有 utf-8 encoding 設定,則表單不可輸入中文
        'tools.encode.encoding': 'utf-8'
    }
    def __init__(self):
        self.trans = math.pi / 180.0
    # 首頁 menulink 為連結
    # exposed 要設為true 表示可被頁面拜訪
    def index(self):
        Outstring = '''
        <h1>c2w17</h1>
        c2w17 answer
        Hope you enjoy your code travel
        '''
        return Outstring + self.menuLink()
    index.exposed = True
    # 第一題頁面
    # 三個 input
    def index1(self):
        Outstring = '''
        <h1>二力 給予 角度 以及力 試著 算出合力</h1>
        <h2>給予 角度 以及 二力 </h2>
        <form method="post" action="doAct1" enctype="multipart/form-data">
        第一力 <input type=text name=force1 value=1 ><br />
        第二力 <input type=text name=force2 value=1 ><br />
        角度<input type=text name=angle value=0 ><br />
        <input type="submit" value="send">
        <input type="reset" value="reset">
        </form>
        '''
        return Outstring + self.menuLink()
    index1.exposed = True
    # 第一題邏輯頁面 輸入三個 input
    def doAct1(self, force1=None, force2=None, angle=None):
        # 檢測三個INPUT 是否有值
        if(force1 or force2 or angle):
            # 當三個INPUT都有值 嘗試把三個INPUT 轉換(因為必須做數值加減)轉換失敗則跑到except
            try:
                f1 = float(force1)
                f2 = float(force2)
                theta = float(angle)
            # 轉換失敗 回覆 輸入錯誤
            except:
                return "some input is not correct<br />" + self.menuLink()
            # 轉換成功 則 做合力相加 將兩力 的 X軸向力相加 平方 加上 Y軸向力相加 平方 再來開耕號
            mergeforce = math.sqrt(
                (f1 + f2 * math.cos(theta * self.trans)) ** 2 + (f2 * math.sin(theta * self.trans)) ** 2)
            return '合力為' + str(mergeforce) + self.menuLink()
        # 如果沒有 則回覆 輸入錯誤
        else:
            return "some input is not correct<br />" + self.menuLink()
    # 表示此頁面可被拜訪
    doAct1.exposed = True
    # 第二題首頁 跟第一題相似
    def index2(self):
        Outstring = '''
        <h1>一力 給予角度 試算出 X軸 Y軸向的分力</h1>
        <h2>給予 角度 以及 力 </h2>
        <form method="post" action="doAct2" enctype="multipart/form-data">
        力 <input type=text name=force1 value=1 ><br />
        角度<input type=text name=angle value=0 ><br />
        <input type="submit" value="send">
        <input type="reset" value="reset">
        </form>
        '''
        return Outstring + self.menuLink()
    index2.exposed = True
    # 第二題頁面  邏輯
    def doAct2(self, force1=None, angle=None):
        if(force1 or angle):
            try:
                f1 = float(force1)
                theta = float(angle)
            except:
                return "some input is not correct<br />" + self.menuLink()
            f_x = f1 * math.cos(theta * self.trans)
            f_y = f1 * math.sin(theta * self.trans)
            return 'X軸向分力' + str(f_x)+'\n'+'Y軸向分力' +  str(f_y) + self.menuLink()
        else:
            return "some input is not correct<br />" + self.menuLink()
    doAct2.exposed = True
    # 第三題首頁 兩個INPUT X 與 Y
    def index3(self):
        Outstring = '''
        <h1>XY點 判斷 此點坐落在 何一象限</h1>
        <h2>給予 XY點 </h2>
        <form method="post" action="doAct3" enctype="multipart/form-data">
        X <input type=text name=x value=1 ><br />
        Y <input type=text name=y value=0 ><br />
        <input type="submit" value="send">
        <input type="reset" value="reset">
        </form>
        '''
        return Outstring + self.menuLink()
    index3.exposed = True
    def doAct3(self, x=None, y=None):
        if(x or y):
            try:
                crood_x = float(x)
                crood_y = float(y)
            except:
                return "some input is not correct<br />" + self.menuLink()
            # 判斷 X Y在與哪個象限 如X 或 Y為0 則會輸出 位於軸上
            if(crood_x > 0 and crood_y > 0):
                return "位於第一象限" + self.menuLink()
            elif(crood_x < 0 and crood_y > 0):
                return "位於第二象限" + self.menuLink()
            elif(crood_x < 0 and crood_y < 0):
                return "位於第三象限" + self.menuLink()
            elif(crood_x > 0 and crood_y < 0):
                return "位於第四象限" + self.menuLink()
            else:
                return "位於軸上" + self.menuLink()
        else:
            return "some input is not correct<br />" + self.menuLink()
    doAct3.exposed = True
    # 超連結
    def menuLink(self):
        return '''
        <br />
        <a href="index">Home</a>|
        <a href="index1">q1</a>|
        <a href="index2">q2</a>|
        <a href="index3">q3</a>
        '''
class c2w18(object):
    """ c2w18"""
    def index(self):
        Outstring = "hello,this is c2w18"
        return Outstring + self.menuLink()
    index.exposed = True
    def index1(self):
        Outstring = '''
        <h1>給予力(N) 以及 平面長(m)寬(m) 試著 算出壓力(N/m^2)</h1>
        <h2>P(壓力) = F (力)/ A (面積 長乘寬)</h2>
        <form method="post" action="doAct1" enctype="multipart/form-data">
        力(N):<input type=text name=force value=1 ><br />
        長(m)<input type=text name=length value=1 ><br />
        寬(m)<input type=text name=width value=1 ><br />
        <input type="submit" value="send">
        <input type="reset" value="reset">
        </form>
        '''
        return Outstring + self.menuLink()
    index1.exposed = True
    # 第一題邏輯頁面 輸入三個 input
    def doAct1(self, force=None, length=None, width=None):
        # 檢測三個INPUT 是否有值
        if(force or length or width):
            # 當三個INPUT都有值 嘗試把三個INPUT 轉換(因為必須做數值加減)轉換失敗則跑到except
            try:
                F = float(force)
                L = float(length)
                W = float(width)
            # 轉換失敗 回覆 輸入錯誤
            except:
                return "some input is not correct<br />" + self.menuLink()
            # 轉換成功 則 做合力相加 將兩力 的 X軸向力相加 平方 加上 Y軸向力相加 平方 再來開耕號
            P = F / (L * W)
            return '''壓力(N/m^2)''' + str(P) + self.menuLink()
        # 如果沒有 則回覆 輸入錯誤
        else:
            return "some input is not correct<br />" + self.menuLink()
    # 表示此頁面可被拜訪
    doAct1.exposed = True
    def index2(self):
        Outstring = '''
        <h1>給予質量(kg) 以及 立方體長(m)寬(m)高(m) 試著 算出密度(kg/m^3)</h1>
        <h2>D(密度) = M (質量) / V (體積)</h2>
        <form method="post" action="doAct2" enctype="multipart/form-data">
        質量(kg):<input type=text name=mass value=1 ><br />
        長(m)<input type=text name=length value=1 ><br />
        寬(m)<input type=text name=width value=1 ><br />
        高(m)<input type=text name=height value=1 ><br />
        <input type="submit" value="send">
        <input type="reset" value="reset">
        </form>
        '''
        return Outstring + self.menuLink()
    index2.exposed = True
    # 第一題邏輯頁面 輸入三個 input
    def doAct2(self, mass=None, length=None, width=None, height=None):
        # 檢測三個INPUT 是否有值
        if(mass or length or width or height):
            # 當三個INPUT都有值 嘗試把三個INPUT 轉換(因為必須做數值加減)轉換失敗則跑到except
            try:
                M = float(mass)
                L = float(length)
                W = float(width)
                H = float(height)
            # 轉換失敗 回覆 輸入錯誤
            except:
                return "some input is not correct<br />" + self.menuLink()
            # 轉換成功 則 做合力相加 將兩力 的 X軸向力相加 平方 加上 Y軸向力相加 平方 再來開耕號
            D = M / (L * W * H)
            return '''密度(kg/m^3)''' + str(D) + self.menuLink()
        # 如果沒有 則回覆 輸入錯誤
        else:
            return "some input is not correct<br />" + self.menuLink()
    # 表示此頁面可被拜訪
    doAct2.exposed = True
    def index3(self):
        Outstring = '''
        <h1>給予 以及 質量(kg) 加速度 (m/s^2)位移(m) 試著 算出動能(kg*m^2/s^2)</h1>
        <h2>E(動能) = M (質量) * G (加速度(這邊是重力)) * H (位移)</h2>
        <form method="post" action="doAct3" enctype="multipart/form-data">
        質量(kg):<input type=text name=mass value=1 ><br />
        加速度(m)<input type=text name=acceleration value=9.8 ><br />
        位移(m)<input type=text name=distance value=1 ><br />
        <input type="submit" value="send">
        <input type="reset" value="reset">
        </form>
        '''
        return Outstring + self.menuLink()
    index3.exposed = True
    # 第一題邏輯頁面 輸入三個 input
    def doAct3(self, mass=None, acceleration=None, distance=None):
        # 檢測三個INPUT 是否有值
        if(mass or acceleration or distance):
            # 當三個INPUT都有值 嘗試把三個INPUT 轉換(因為必須做數值加減)轉換失敗則跑到except
            try:
                M = float(mass)
                G = float(acceleration)
                H = float(distance)
            # 轉換失敗 回覆 輸入錯誤
            except:
                return "some input is not correct<br />" + self.menuLink()
            # 轉換成功 則 做合力相加 將兩力 的 X軸向力相加 平方 加上 Y軸向力相加 平方 再來開耕號
            E = M * G * H
            return '''動能(kg*m^2/s^2):''' + str(E) + self.menuLink()
        # 如果沒有 則回覆 輸入錯誤
        else:
            return "some input is not correct<br />" + self.menuLink()
    # 表示此頁面可被拜訪
    doAct3.exposed = True
    def menuLink(self):
        return '''
        <br />
        <a href="index">Home</a>|
        <a href="index1">q1</a>|
        <a href="index2">q2</a>|
        <a href="index3">q3</a>
        '''
# 開起目錄
class Root(object):
    '''
    localhost:8083/c2w17/
    localhost:8083/c2w18/
    '''
    _cp_config = {
        # 配合 utf-8 格式之表單內容
        # 若沒有 utf-8 encoding 設定,則表單不可輸入中文
        'tools.encode.encoding': 'utf-8'
    }
    # 指定 c2w17 子頁面可被拜訪
    c2w17 = c2w17()
    # 指定 c2w18可被拜訪
    c2w18 = c2w18()
    # root 首頁
    def index(self):
        return "hello world!"
    index.exposed = True

#單機使用
#cherrypy.quickstart(HelloWorld())
application = cherrypy.Application(Root())